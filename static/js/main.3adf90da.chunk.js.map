{"version":3,"sources":["components/Login.js","components/Sidebar.js","components/Message.js","components/MessageInput.js","components/TypingIndicator.js","components/Chat.js","App.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onError","message","setState","loading","error","onSubmit","e","username","state","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","loginUser","catch","onChange","target","value","react_default","a","createElement","Container","textAlign","style","position","left","right","paddingTop","fontSize","color","Divider","Form","className","Input","label","width","Button","type","Component","Sidebar","allUsers","_ref","index","key","user","users","Label","size","id","currentUser","name","presence","Icon","_this2","Grid","Column","backgroundColor","Header","as","block","Content","es","_ref2","height","rowCount","length","rowHeight","rowRenderer","outline","bottom","Message","messageList","messages","Segment","padded","vertical","padding","attached","senderId","minWidth","text","paddingBottom","border","children","MessageInput","sendTypingEvent","isTypingIn","roomId","room","console","onMessageChange","onMessageSubmit","sendMessage","placeholder","TypingIndicator","margin","concat","slice","join","Chat","typingUsers","Chatkit","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","url","connect","subscribeToRoom","messageLimit","hooks","onMessage","toConsumableArray","onUserStartedTyping","onUserStoppedTyping","filter","onPresenceChanged","forceUpdate","columns","components_Sidebar","components_Message","components_MessageInput","components_TypingIndicator","Dimmer","active","Loader","App","localStorage","setItem","logoutUser","removeItem","offline","window","addEventListener","getItem","components_Chat","components_Login","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3adf90da.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, Container, Divider } from 'semantic-ui-react'\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      error: null,\n      loading: false,\n    }\n  }\n\n  onError = (message) => {\n    this.setState({\n      loading: false,\n      error: message\n    })\n  };\n\n  onSubmit = (e) => {\n    this.setState({ loading: true });\n    let username = this.state.username;\n    fetch('http://localhost:3001/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username }),\n    })\n      .then(response => {\n            this.props.loginUser(username)\n        }\n      )\n      .catch(this.onError);\n  };\n\n  onChange = (e) => {\n    this.setState({ username: e.target.value })\n  };\n\n  render() {\n    return (\n      <div>\n      <Container textAlign='center' style={{'position': 'absolute', 'left': '0', 'right': '0', 'paddingTop' : '150px'}}>\n        <h1 style={{'fontSize':'40px', 'color' : '#ed4b1a'}}>Welcome!</h1>\n        <Divider />\n              <br />\n              <Form onSubmit={this.onSubmit} \n              loading={this.state.loading}>\n\n                <div className={\"ui centered grid\"}>\n                <Form.Input label='Enter Your Username' onChange={this.onChange} width={5} />\n                  <div className={\"row\"}>\n                    <Button type='submit' color={'orange'}>Log In</Button>\n                  </div>\n                </div>\n\n              </Form>\n              </Container>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import React, { Component } from 'react'\nimport { Grid, Label, Header, Icon } from 'semantic-ui-react';\nimport { AutoSizer, List } from 'react-virtualized'\n\n\nclass Sidebar extends Component {\n\n  allUsers = ({index, key, style}) => {\n    let user = this.props.users[index];\n    return (\n      <div key={key} style={style}>\n        <Label size={'big'} style={{'width': '100%', 'position': 'relative'}} color='black'>\n          {/* user.name */}\n          {/* user.id === this.props.currentUser.id && <span> (you)</span> */}\n          { user.id === this.props.currentUser.id ? <span> You</span> : user.name }\n          { user.presence.state === 'online' &&\n          <Icon name={'circle'} color={'green'} style={{'position': 'absolute', 'right': '5px'}}/>\n          }\n        </Label>\n      </div>\n    )\n  };\n\n  render() {\n    return (\n      <Grid.Column width={3} style={{ 'paddingTop': '50px', 'backgroundColor': '#ed4b1a'}}>\n        <Header as={'h3'} block style={{'width': '100%', 'position': 'relative',  'backgroundColor': '#ffffff'}}>\n          <Header.Content  style={{'color': '#ed4b1a'}}>All Users</Header.Content>\n        </Header>\n        <AutoSizer>\n          { ({ height, width }) => <List height={height} width={width} rowCount={this.props.users.length} rowHeight={50} rowRenderer={this.allUsers} style={{'outline': 'none'}}/>}\n        </AutoSizer>\n        <div style={{'position': 'absolute', 'bottom': '0', 'left': '0'}}>\n        </div>\n      </Grid.Column>\n    )\n  }\n\n}\n\nexport default Sidebar\n","import React, { Component } from 'react'\nimport { Grid, Segment, Label, Header } from 'semantic-ui-react';\nimport { AutoSizer, List } from 'react-virtualized'\n\nclass Message extends Component {\n\n  messageList = ({index, key}) => {\n    let message = this.props.messages[index];\n    return (\n      <Segment padded vertical key={key} style={{'fontSize' : '15px', 'color' : '#ed4b1a', 'padding': '20px'}}>\n        <Label attached={ 'bottom right' } color={message.senderId === this.props.currentUser.id ? 'black' : 'orange'} style={{'minWidth': '100px'}}>\n          { message.senderId === this.props.currentUser.id ? 'You' :  message.senderId}\n        </Label>\n        { message.text }\n      </Segment>\n    )\n  };\n  \n  render() {\n    return (\n      <Grid.Column width={13} style={{'paddingTop': '50px', 'paddingBottom': '50px'}}>\n        <Header as={'h1'} block style={{'width': '100%', 'position': 'relative',  'backgroundColor': '#ffffff', 'border': 'none'}} textAlign={'center'} >\n          <Header.Content style={{'color': '#ed4b1a'}}>Messages</Header.Content>\n        </Header>\n        <AutoSizer>\n          { ({height, width}) => <List height={height} width={width} rowCount={this.props.messages.length} rowHeight={60} rowRenderer={this.messageList} style={{'outline': 'none'}}/> }\n        </AutoSizer>\n        { this.props.children }\n      </Grid.Column>\n    )\n  }\n\n}\n\nexport default Message\n","import React, { Component } from 'react'\nimport { Form } from 'semantic-ui-react';\n\nclass MessageInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n    }\n  }\n\n  sendTypingEvent = () => {\n    this.props.currentUser\n      .isTypingIn({ roomId: this.props.room.id })\n      .catch(error => console.error('error', error))\n  };\n\n  onMessageChange = (e,) => {\n    this.sendTypingEvent();\n    this.setState({ message: e.target.value });\n  };\n\n  onMessageSubmit = (e) => {\n    this.props.currentUser.sendMessage({\n      text: this.state.message,\n      roomId: this.props.room.id,\n    });\n    this.setState({ message: '' })\n  };\n\n  render() {\n\n    return (\n      <div style={{ 'position': 'absolute', 'bottom': '0', 'left': '0', 'padding': '10px', 'width': '100%'}}>\n        {this.props.children}\n          <Form onSubmit={this.onMessageSubmit}>\n            <Form.Input  placeholder={'Type a Message'} value={this.state.message} size={'large'} onChange={this.onMessageChange} />\n          </Form>\n      </div>\n    )\n  }\n\n}\n\nexport default MessageInput\n","import React, { Component } from 'react'\n\nclass TypingIndicator extends Component {\n  render() {\n    if (this.props.users.length > 0) {\n      return (\n        <div style={{'margin': '10px'}}>\n          {`${this.props.users\n            .slice(0, 2)\n            .join(' and ')} is typing...`}\n        </div>\n      )\n    }\n    return <div />\n  }\n}\n\nexport default TypingIndicator\n","import React, { Component } from 'react'\nimport Chatkit from '@pusher/chatkit-client'\nimport { Dimmer, Loader, Grid } from 'semantic-ui-react';\n\nimport Sidebar from './Sidebar';\nimport Message from './Message';\nimport MessageInput from './MessageInput';\nimport TypingIndicator from './TypingIndicator';\n\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: null,\n      messages: [],\n      currentUser: {},\n      typingUsers: [],\n    }\n  }\n\n  componentDidMount() {\n    const chatManager = new Chatkit.ChatManager({\n      instanceLocator: 'v1:us1:b1e9feac-0831-4538-92be-fa529339f77f',\n      userId: this.props.username,\n      tokenProvider: new Chatkit.TokenProvider({\n        url: 'http://localhost:3001/authenticate',\n      }),\n    });\n\n    chatManager\n      .connect()\n      .then(currentUser => {\n        this.setState({ currentUser });\n        return currentUser.subscribeToRoom({\n          roomId: \"19394053\",\n          messageLimit: 100,\n          hooks: {\n            onMessage: message => this.setState({\n              messages: [...this.state.messages, message],\n            }),\n            onUserStartedTyping: user => this.setState({\n              typingUsers: [...this.state.typingUsers, user.name],\n            }),\n            onUserStoppedTyping: user => this.setState({\n              typingUsers: this.state.typingUsers.filter(\n                username => username !== user.name\n              ),\n            }),\n            onPresenceChanged: () => this.forceUpdate(),\n          },\n        })\n      })\n      .then(room => {\n        this.setState({ room })\n      })\n  }\n\n  render() {\n\n    return (\n      this.state.room\n        ?\n        <Grid padded columns={2} className={'chat'}>\n          <Sidebar users={this.state.room.users} currentUser={this.state.currentUser} />\n          <Message messages={this.state.messages} currentUser={this.state.currentUser}>\n            <MessageInput currentUser={this.state.currentUser} room={this.state.room}>\n              <TypingIndicator users={this.state.typingUsers}/>\n            </MessageInput>\n          </Message>\n        </Grid>\n        :\n        <Dimmer active >\n          <Loader size={'medium'}>Loading...</Loader>\n        </Dimmer>\n    )\n  }\n\n}\n\nexport default Chat\n","import React, { Component } from 'react'\nimport {Container} from 'semantic-ui-react'\n\nimport Login from './components/Login'\nimport Chat from './components/Chat'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      offline: false\n    };\n    window.addEventListener('online', () => this.setState({ offline: false }))\n    window.addEventListener('offline', () => this.setState({ offline: true }))\n  }\n\n  componentDidMount() {\n    let username = localStorage.getItem('username');\n    if (username) {\n      this.setState({ username: username })\n    }\n  }\n\n  loginUser = (username) => {\n    localStorage.setItem('username', username);\n    this.setState({ username: username });\n  };\n\n  logoutUser = () => {\n    localStorage.removeItem('username');\n    this.setState({ username: '' });\n  };\n\n  render() {\n    return (\n      <div className={'chat'}>\n      {\n        this.state.offline ? \n        <Container textAlign='center' style={{'position': 'absolute', 'left': '0', 'right': '0', 'paddingTop' : '150px'}}>\n          <h1 style={{'fontSize':'40px', 'color' : '#ed4b1a'}}>App Is Offline</h1>\n          <p style={{'fontSize':'20px', 'color' : '#ed4b1a'}}>Check Your Network Connection</p>\n        </Container> :\n       \n          this.state.username\n            ?  <Chat username={this.state.username} />\n            :   <Login loginUser={this.loginUser}/>\n      }\n      </div>\n\n    );\n  }\n}\n\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css'\n//import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.register();\n"],"sourceRoot":""}